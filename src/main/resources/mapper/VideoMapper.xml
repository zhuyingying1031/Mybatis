<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
namespace: 名称空间，一般需要保持全局唯一， 最好是和dao层的java接口一致，
可以映射 sql语句 到对应的方法名称和参数、返回类型
mybatis是使用接口动态代理
-->
<mapper namespace="net.xdclass.online_class.dao.VideoMapper">
    <!--
    statement sql
    id： 当前mapper下需要唯一
    resultType : sql查询结果集的封装
    -->
    <select id="selectById" parameterType="java.lang.Integer" resultType="net.xdclass.online_class.domain.Video">
        select * from video where id = #{video_id,jdbcType=INTEGER}
    </select>
    <select id="selectListByXML" resultType="net.xdclass.online_class.domain.Video">
        select * from video
    </select>
    <select id="selectByPointAndTitleLike" resultType="net.xdclass.online_class.domain.Video">
        select * from video where point=#{point} and title like concat('%', #{title},'%')
    </select>

    <insert id="add" parameterType="net.xdclass.online_class.domain.Video" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
        INSERT INTO `video` ( `title`, `summary`, `cover_img`, `price`, `create_time`, `point`)
        VALUES
	    (#{title,jdbcType=VARCHAR},#{summary,jdbcType=VARCHAR},#{coverImg,jdbcType=VARCHAR},#{price,jdbcType=INTEGER},
	     #{createTime,jdbcType=TIMESTAMP},#{point,jdbcType=DOUBLE});
    </insert>

    <insert id="addBatch" parameterType="net.xdclass.online_class.domain.Video" useGeneratedKeys="true" keyProperty="id" keyColumn="id" >
        INSERT INTO `video` ( `title`, `summary`, `cover_img`, `price`, `create_time`, `point`)
        VALUES
        <foreach collection="list" item="video" separator=",">
            (#{video.title,jdbcType=VARCHAR},#{video.summary,jdbcType=VARCHAR},#{video.coverImg,jdbcType=VARCHAR}, #{video.price,jdbcType=INTEGER}, #{video.createTime,jdbcType=TIMESTAMP},#{video.point,jdbcType=DOUBLE})
        </foreach>
    </insert>

    <update id="updateVideo" parameterType="net.xdclass.online_class.domain.Video">

        update video

        set
        title = #{title,jdbcType=VARCHAR},
        summary = #{summary,jdbcType=VARCHAR},
        cover_img = #{coverImg,jdbcType=VARCHAR},
        price = #{price,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        point = #{point,jdbcType=DOUBLE}

        where
        id = #{id}


    </update>
</mapper>